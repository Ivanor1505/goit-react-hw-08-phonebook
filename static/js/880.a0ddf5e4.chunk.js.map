{"version":3,"file":"static/js/880.a0ddf5e4.chunk.js","mappings":"mPAEaA,EAASC,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6DAMtBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sC,SCJtBG,EAAU,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACP,EAAU,CAAAQ,SAAA,EACTD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CACGJ,EAAQK,KAAK,KAAGL,EAAQM,WAE3BC,EAAAA,EAAAA,KAACf,EAAM,CACLgB,QAAS,SAAAC,GAAC,OAAIR,GAASS,EAAAA,EAAAA,IAAcD,EAAEE,OAAOC,IAAI,EAClDA,GAAIZ,EAAQY,GAAGR,SAChB,aAKP,E,SCpBaS,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAO,ECClCC,EAAY1B,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFAOtByB,EAAQ3B,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yBCJpB0B,EAAS,WACpB,IAAMH,GAASI,EAAAA,EAAAA,IAAYL,GACrBhB,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACgB,EAAS,CAAAf,SAAA,EACRG,EAAAA,EAAAA,KAAA,SAAAH,SAAO,8BACPG,EAAAA,EAAAA,KAACa,EAAK,CACJG,KAAK,OACLlB,KAAK,SACLmB,SAAU,SAAAf,GAAC,OAAIR,GAASwB,EAAAA,EAAAA,GAAahB,EAAEE,OAAOe,OAAO,EACrDA,MAAOR,MAIf,EClBaS,EAAOlC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+DCKhBiC,EAAc,WACzB,IAAMV,GAASI,EAAAA,EAAAA,IAAYL,GACrBF,GAAWO,EAAAA,EAAAA,IAAYT,GAc7B,OACEN,EAAAA,EAAAA,KAACoB,EAAI,CAAAvB,UAVAc,EAIEH,EAASG,QAAO,SAAAlB,GAAO,OAC5BA,EAAQK,KAAKwB,cAAcC,SAASZ,EAAOW,cAAc,IAJlDd,GAUSgB,KAAI,SAAAC,GAClB,OAAOzB,EAAAA,EAAAA,KAACT,EAAO,CAAyBE,QAASgC,GAA5BA,EAAepB,GACtC,KAGN,ECNA,EAhBiB,WACf,IAAMX,GAAWC,EAAAA,EAAAA,MAMjB,OAJA+B,EAAAA,EAAAA,YAAU,WACRhC,GAASiC,EAAAA,EAAAA,MACX,GAAG,CAACjC,KAGFE,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAA/B,SAAA,EACEG,EAAAA,EAAAA,KAACT,EAAO,KACRS,EAAAA,EAAAA,KAACc,EAAM,KACPd,EAAAA,EAAAA,KAACqB,EAAW,MAGlB,C","sources":["components/Contact/Contact.styled.js","components/Contact/Contact.jsx","redux/phonebook/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/phonebook/Phonebook.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\ndisplay: block;\nmargin-top: 10px;\nheight: 25px;\n`;\n\nexport const CotactItem = styled.li`\ndisplay: flex;\ngap: 20px;\n`;","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/phonebook/operations';\nimport { Button, CotactItem } from './Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <CotactItem>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <Button\n        onClick={e => dispatch(deleteContact(e.target.id))}\n        id={contact.id}\n      >\n        Delete\n      </Button>\n    </CotactItem>\n  );\n};\n","export const getAllContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getLoading = state => state.contacts.isLoading; \nexport const getError = state => state.contacts.error; \n\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\nmargin-left: 20px;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n`;\n\nexport const Input = styled.input`\nwidth: 200px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/phonebook/filterSlice';\nimport { getFilter } from 'redux/phonebook/selectors';\nimport { FilterBox, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterBox>\n      <label>Filter contacts by name:</label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        value={filter}\n      />\n    </FilterBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n`;","import React from 'react';\nimport { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { getAllContacts } from 'redux/phonebook/selectors';\nimport { getFilter } from 'redux/phonebook/selectors';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getAllContacts);\n\n  // console.log('Всі контакти:', contacts);\n\n  const filterByName = () => {\n    if (!filter) {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <List>\n      {filterByName().map(filtredContact => {\n        return <Contact key={filtredContact.id} contact={filtredContact} />;\n      })}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/phonebook/operations';\n\nimport { Contact } from 'components/Contact/Contact';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Contact />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","CotactItem","_templateObject2","Contact","_ref","contact","dispatch","useDispatch","_jsxs","children","name","number","_jsx","onClick","e","deleteContact","target","id","getAllContacts","state","contacts","items","getFilter","filter","FilterBox","Input","Filter","useSelector","type","onChange","changeFilter","value","List","ContactList","toLowerCase","includes","map","filtredContact","useEffect","fetchContacts","_Fragment"],"sourceRoot":""}